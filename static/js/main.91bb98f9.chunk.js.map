{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/App.js","components/hooks/hooks.js","index.js"],"names":["uuidv4","require","v4","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","className","preventDefault","onChange","id","type","pattern","title","required","disabled","Filter","filter","defaultValue","ContactItem","deleteContact","onClick","protoTypes","PropTypes","string","isRequired","func","ContactList","contacts","onBtnDelete","map","arrayOf","shape","App","key","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","contactsFilter","setContactsFilter","contactsData","normalizeFilter","toLowerCase","el","includes","filterContacts","find","alert","newData","prevState","contactId","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91bb98f9.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nconst { v4: uuidv4 } = require(\"uuid\");\n\n///\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number); // отпарвка данных\n\n    reset(); // очищение формы\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <form className=\"form__box\" onSubmit={handleSubmit}>\n      <label className=\"form__label-box\">\n        <span className=\"form__label\"> Name</span>\n        <input\n          className=\"form__input\"\n          value={name}\n          onChange={handleChange}\n          id={uuidv4()}\n          type=\"text\"\n          name=\"name\"\n          data-action=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        <span className=\"form__label\"> Number</span>\n        <input\n          className=\"form__input\"\n          onChange={handleChange}\n          id={uuidv4()}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          data-action=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр, и может содержать пробелы, тире, круглые скобки, и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <div className=\"form__btn-thumb\">\n        <button\n          className=\"form__addBtn\"\n          type=\"submit\"\n          disabled={!number || !name}\n        >\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n// class ContactForm extends Component {\n\n//   handleChange = (e) => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state); // отпарвка данных\n\n//     this.reset(); // очищение формы\n//   };\n\n//   reset = () => {\n//     this.setState({ name: \"\", number: \"\" });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form className=\"form__box\" onSubmit={this.handleSubmit}>\n//         {/* <div className=\"form__btn-thumb\"> */}\n//         <label className=\"form__label-box\">\n//           <span className=\"form__label\"> Name</span>\n//           <input\n//             className=\"form__input\"\n//             value={name}\n//             onChange={this.handleChange}\n//             id={uuidv4()}\n//             type=\"text\"\n//             name=\"name\"\n//             data-action=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//           />\n//         </label>\n//         <label>\n//           <span className=\"form__label\"> Number</span>\n//           <input\n//             className=\"form__input\"\n//             onChange={this.handleChange}\n//             id={uuidv4()}\n//             value={number}\n//             type=\"tel\"\n//             name=\"number\"\n//             data-action=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять из цифр, и может содержать пробелы, тире, круглые скобки, и может начинаться с +\"\n//             required\n//           />\n//         </label>\n\n//         <div className=\"form__btn-thumb\">\n//           <button\n//             className=\"form__addBtn\"\n//             type=\"submit\"\n//             disabled={!number || !name}\n//           >\n//             Add contact\n//           </button>\n//         </div>\n//       </form>\n//       // </div>\n//     );\n//   }\n// }\n\n// +++++\n// handleChange = (e) => {\n//   const { name, value } = e.currentTarget;\n//   this.setState(() => {\n//   //   this.state.contacts.map((el) => {\n//   //     if (value === el.name) {\n//   //       return alert(`${value} is already in contacts`);\n//   //     }\n//   //   });\n//   // });\n//   return this.setState({ [name]: value })\n// };\n","import PropTypes from \"prop-types\";\n\nconst Filter = ({ filter, value }) => (\n  <div>\n    <h3 className=\"contacts__title-find\">Find contacts by name</h3>\n    <label>\n      <input\n        className=\"contacts__input\"\n        type=\"text\"\n        defaultValue={filter}\n        onChange={value}\n      ></input>\n    </label>\n  </div>\n);\nFilter.propTypes = {\n  value: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\nexport default Filter;\n","import PropTypes from \"prop-types\";\n\nconst { v4: uuidv4 } = require(\"uuid\");\n\nconst ContactItem = ({ name, number, id, deleteContact }) => {\n  return (\n    <li id={uuidv4()} key={id} className=\"contacts__item\">\n      {name} <span>: {number}</span>\n      <button className=\"contacts__btn\" onClick={() => deleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\nContactItem.protoTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default ContactItem;\n","import PropTypes from \"prop-types\";\nimport ContactItem from \"./ContactItem\";\n\n//////\nconst ContactList = ({ contacts, onBtnDelete }) => (\n  <>\n    <ul className=\"contacts__list\">\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <ContactItem\n            key={id}\n            name={name}\n            number={number}\n            id={id}\n            deleteContact={onBtnDelete}\n          />\n        );\n      })}\n    </ul>\n  </>\n);\n\nContactList.protoTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n  onBtnDelete: PropTypes.func.isRequired,\n};\nexport default ContactList;\n// =========\n","// import React, { Component } from \"react\";\nimport { useState } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\nimport ContactList from \"./ContactList/ContactList\";\nimport useLocalStorage from \"./hooks/hooks\";\nimport \"../styles/Container.scss\";\nimport \"../styles/Form.scss\";\nimport \"../styles/ContactsList.scss\";\n\nconst { v4: uuidv4 } = require(\"uuid\");\n//\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n  const [contactsFilter, setContactsFilter] = useState(\"\");\n\n  //пpинимает данные из формы\n  const formSubmit = (name, number) => {\n    if (contacts.find((el) => name === el.name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newData = [{ id: uuidv4(), name: name, number: number }];\n    setContacts((prevState) => [...prevState, ...newData]);\n  };\n\n  const filterContacts = () => {\n    const normalizeFilter = contactsFilter.toLowerCase();\n    return contacts.filter((el) =>\n      el.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const onFilterChange = (e) => {\n    setContactsFilter(e.currentTarget.value);\n  };\n  const onDeleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  const contactsData = filterContacts();\n  return (\n    <div className=\"container\">\n      <h1 className=\"header\">Phonebook</h1>\n      <ContactForm onSubmit={formSubmit} />\n\n      <h2 className=\"contacts__title\">Contacts</h2>\n      <Filter value={onFilterChange} filter={contactsFilter} />\n      <ContactList contacts={contactsData} onBtnDelete={onDeleteContact} />\n    </div>\n  );\n}\nexport default App;\n","import { useState, useEffect } from \"react\";\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n\n  return [state, setState];\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"modern-normalize/modern-normalize.css\";\nimport App from \"./components/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>{<App />}</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}